Task 1: Deploy the machine 

******************************************************************************************************************************************************************************************************************************************

Task 2: Reconnaissance

[*] Nmap is a free, open-source and powerful tool used to discover hosts and services on a computer network

    [+] Gather information about this machine using a network scanning tool called Nmap.

    [+] Scan the box: nmap -sV MACHINE_IP

[Question 1]: There are many Nmap "cheatsheets" online that you can use too.

    [!] Answer: No answer needed

[Question 2]: Scan the box; how many ports are open?

    [!] Answer: 6

[Question 3]: What version of the squid proxy is running on the machine?

    [!] Answer: 3.5.12  

[Question 4]: How many ports will Nmap scan if the flag -p-400 was used?

    [!] Answer: 400

[Question 5]: What is the most likely operating system this machine is running?

    [!] Answer: Ubuntu

[Question 6]: What port is the web server running on?

    [!]: 3333

[Question 7]: It's essential to ensure you are always doing your reconnaissance thoroughly before progressing. Knowing all open services (which can all be points of exploitation) is very important, don't forget that ports on a higher range might be open, so constantly scan ports after 1000 (even if you leave checking in the background).

    [!] Answer: No answer needed

[Question 8]: What is the flag for enabling verbose mode using Nmap?

    [!] Answer: -v

******************************************************************************************************************************************************************************************************************************************

Task 3: Locating directories using Gobuster 

[*] gobuster dir -u http://MACHINE_IP:3333 -w <word list location>

[Question]: What is the directory that has an upload form page?

    [!] Answer: /internal/

******************************************************************************************************************************************************************************************************************************************

Task 4: Compromise the Webserver

[*] Now that you have found a form to upload files, we can leverage this to upload and execute our payload, which will lead to compromising the web server.

[Question 1]: What common file type you'd want to upload to exploit the server is blocked? Try a couple to find out. 

    [!] Answer: .php    

    [+] To begin, make a wordlist with the following extensions:
    .php
    .php3
    .php4
    .php5
    .phtml

    [+] Now make sure BurpSuite is configured to intercept all your browser traffic. Upload a file; once this request is captured, send it to the Intruder. Click on "Payloads" and select the "Sniper" attack type.

    [+] Click the "Positions" tab now, find the filename and "Add ยง" to the extension.

[Question]: Run this attack, what extension is allowed?

    [!] Answer: .phtml

[Question]: What is the name of the user who manages the webserver?

    [+] Download the following reverse PHP shell

    [+] Upload your shell and navigate to http://MACHINE_IP:3333/internal/uploads/php-reverse-shell.phtml - This will execute your payload

    [!] Answer: bill

[Question]: What is the user flag?

    [!] Answer: 8bd7992fbe8a6ad22a63361004cfcedb

******************************************************************************************************************************************************************************************************************************************

Task 5: Privilege Escalation 

[*] In Linux, SUID (set owner userId upon execution) is a particular type of file permission given to a file. SUID gives temporary permissions to a user to run the program/file with the permission of the file owner (rather than the user who runs it).

[Question 1]: On the system, search for all SUID files. Which file stands out?

    [!] Answer: /bin/systemctl/

[Question 2]: Become root and get the last flag (/root/root.txt)

    [+] Hint: /bin/systemctl

    [!] Answer: a58ff8579f0a9270368d33a9966c7fd5
